{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","components/generic/Button.js","utils/helpers.js","components/generic/DisplayTimer.js","components/generic/DisplayRound.js","components/generic/Circle.js","components/generic/Panel.js","views/DocumentationView.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/timers/XY.js","components/timers/Tabata.js","views/TimersView.js","components/generic/NavContainer.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","this","props","title","component","propDocs","map","doc","prop","description","type","defaultValue","React","Component","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","defaultProps","PrimaryButton","button","SecondaryButton","Button","calcRadius","strokeWidth","calcCircum","radius","Math","PI","formatNumber","int","toLocaleString","minimumIntegerDigits","useGrouping","Timer","text","DisplayTimer","minutes","seconds","milliseconds","x","y","Round","RoundType","DisplayRound","round","currentMode","EmptyProgressCircle","circle","c","r","ProgressCircle","percent","circum","calcOffset","Circle","currentRound","roundLength","timerVisible","height","width","propType","PropTypes","number","oneOf","Panel","Stopwatch","state","Countdown","XY","totalRounds","Tabata","restLength","workLength","Timers","TimerTitle","App","timers","C","timer","index","NavContainer","to","path","DocumentationView","TimersView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7925ac25.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.props.title}</Title>\n        <Container>\n          <RenderComponent>{this.props.component}</RenderComponent>\n          <Documentation>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n            {this.props.propDocs.map((doc) => {\n              return (\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </Documentation>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nclass Loading extends React.Component {\n  render() {\n    const size = sizeMapping[this.props.size];\n    const { color } = this.props;\n\n    return (\n      <Container>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst PrimaryButton = styled.button`\n  background-color: #15cb61;\n  color: white;\n  margin-top: 4em;\n  margin-right: 1em;\n  margin-left 1em;\n  border-width: 0;\n  border-radius: 10px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.6);\n  font-family: Segoe UI;\n  font-size: 20px;\n  padding: 1em 2em;\n  transition: background-color .4s;\n\n  :hover {\n    background-color: #11a64f;\n    cursor: pointer;\n  }\n\n  :active {\n    background-color: #0e813e;\n  }\n`;\n\nconst SecondaryButton = styled(PrimaryButton)`\n  background-color: #ea3546;\n\n  :hover {\n    background-color: #de172b;\n  }\n\n  :active {\n    background-color: #b91324;\n  }\n`;\n\nclass Button extends React.Component {\n  render() {\n    const { type } = this.props;\n\n    return (\n      <>\n        {type === \"Primary\" && <PrimaryButton>Start</PrimaryButton>}\n        {type === \"Secondary\" && <SecondaryButton>Pause</SecondaryButton>}\n      </>\n    );\n  }\n}\n\nButton.propTypes = {\n  type: PropTypes.oneOf([\"Primary\", \"Secondary\"]),\n};\n\nButton.defaultProps = {\n  type: \"Primary\",\n};\n\nexport default Button;\n","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\n//Calculates the radius attribute to give to the svg circle\nexport function calcRadius(size, strokeWidth) {\n  return size / 2 - strokeWidth * 2;\n}\n\n//Calculates circumference of circle\nexport function calcCircum(radius) {\n  return radius * 2 * Math.PI;\n}\n\n//Calculates the dash offset to fill the progress circle with appropiate percentage\nexport function calcOffset(radius, percent) {\n  const circum = calcCircum(radius);\n\n  return circum - (circum * percent) / 100;\n}\n\n//Formats single digit numbers to always have two digits\nexport function formatNumber(int) {\n  return int.toLocaleString(\"en-US\", {\n    minimumIntegerDigits: 2,\n    useGrouping: false,\n  });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { formatNumber } from \"../../utils/helpers\";\n\nconst Timer = styled.text`\n  stroke: white;\n  fill: white;\n  text-anchor: middle;\n  font-size: 2em;\n`;\n\nclass DisplayTimer extends React.Component {\n  render() {\n    const { minutes, seconds, milliseconds } = this.props;\n    return (\n      <Timer x=\"50%\" y=\"50%\">\n        {formatNumber(minutes)}:{formatNumber(seconds)}:\n        {formatNumber(milliseconds)}\n      </Timer>\n    );\n  }\n}\n\nDisplayTimer.propTypes = {\n  minutes: PropTypes.number,\n  seconds: PropTypes.number,\n  milliseconds: PropTypes.number,\n};\n\nexport default DisplayTimer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Round = styled.text`\n  stroke: white;\n  fill: white;\n  text-anchor: middle;\n  font-size: 1em;\n`;\n\nconst RoundType = styled(Round)`\n  font-size: 0.8em;\n`;\n\nclass DisplayRound extends React.Component {\n  render() {\n    const { round, currentMode } = this.props;\n    return (\n      <>\n        <Round x=\"50%\" y=\"60%\">\n          Round {round}\n        </Round>\n        {currentMode && (\n          <RoundType x=\"50%\" y=\"70%\">\n            {currentMode}\n          </RoundType>\n        )}\n      </>\n    );\n  }\n}\n\nDisplayRound.propTypes = {\n  round: PropTypes.number,\n  currentMode: PropTypes.string,\n};\n\nDisplayRound.defaultProps = {\n  round: 1,\n};\n\nexport default DisplayRound;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport DisplayTimer from \"./DisplayTimer\";\nimport DisplayRound from \"./DisplayRound\";\nimport { calcRadius, calcCircum, calcOffset } from \"../../utils/helpers\";\n\nconst EmptyProgressCircle = styled.circle`\n  stroke: white;\n  fill: transparent;\n  cx: ${(props) => props.c}px;\n  cy: ${(props) => props.c}px;\n  stroke-dasharray: ${(props) => calcCircum(props.r)};\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n`;\n\nconst ProgressCircle = styled(EmptyProgressCircle)`\n  stroke: #a80874;\n  stroke-dashoffset: ${(props) => calcOffset(props.r, props.percent)};\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n`;\n\nclass Circle extends React.Component {\n  render() {\n    const {\n      size,\n      minutes,\n      seconds,\n      milliseconds,\n      strokeWidth,\n      percent,\n      currentRound,\n      roundLength,\n      currentMode,\n      timerVisible,\n    } = this.props;\n\n    return (\n      <>\n        <svg height={size} width={size}>\n          <EmptyProgressCircle\n            r={calcRadius(size, strokeWidth)}\n            c={size / 2}\n            strokeWidth={strokeWidth}\n            shape-rendering=\"smooth\"\n          />\n          <ProgressCircle\n            r={calcRadius(size, strokeWidth)}\n            c={size / 2}\n            strokeWidth={strokeWidth + 1}\n            percent={percent}\n            shape-rendering=\"smooth\"\n          />\n          {timerVisible && (\n            <DisplayTimer\n              minutes={minutes}\n              seconds={seconds}\n              milliseconds={milliseconds}\n            />\n          )}\n          {roundLength && (\n            <DisplayRound round={currentRound} currentMode={currentMode} />\n          )}\n        </svg>\n      </>\n    );\n  }\n}\n\nCircle.propType = {\n  size: PropTypes.number,\n  minutes: PropTypes.number,\n  seconds: PropTypes.number,\n  milliseconds: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  percent: PropTypes.number,\n  currentRound: PropTypes.number,\n  roundLength: PropTypes.number,\n  currentMode: PropTypes.oneOf([\"Rest\", \"Work\"]),\n};\n\nCircle.defaultProps = {\n  size: 200,\n  minutes: 0,\n  seconds: 0,\n  milliseconds: 0,\n  strokeWidth: 15,\n  percent: 100,\n  timerVisible: true,\n};\n\nexport default Circle;\n","import styled from \"styled-components\";\n\nconst Panel = styled.div`\n  margin-top: 1em;\n  margin-bottom: 1em;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  background-color: #0f242e;\n  text-align: center;\n  padding-top: 2em;\n  padding-bottom: 2em;\n`;\n\nexport default Panel;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\nimport Button from \"../components/generic/Button\";\nimport Circle from \"../components/generic/Circle\";\nimport DisplayRound from \"../components/generic/DisplayRound\";\nimport DisplayTimer from \"../components/generic/DisplayTimer\";\nimport Panel from \"../components/generic/Panel\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nclass Documentation extends React.Component {\n  render() {\n    return (\n      <Container>\n        <div>\n          <Title>Documentation</Title>\n          <DocumentComponent\n            title=\"Loading spinner \"\n            component={<Loading />}\n            propDocs={[\n              {\n                prop: \"size\",\n                description: \"Changes the size of the loading spinner\",\n                type: \"string\",\n                defaultValue: \"medium\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Button \"\n            component={<Button type=\"Primary\" />}\n            propDocs={[\n              {\n                prop: \"type\",\n                description:\n                  \"Changes button between the primary color scheme or secondary color depending on value\",\n                type: \"string\",\n                defaultValue: \"Primary\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Circle \"\n            component={\n              <Circle\n                size={100}\n                percent={100}\n                strokeWidth={10}\n                timerVisible={false}\n              />\n            }\n            propDocs={[\n              {\n                prop: \"size\",\n                description:\n                  \"Determines the width and height of the svg element\",\n                type: \"int\",\n                defaultValue: \"200\",\n              },\n              {\n                prop: \"strokeWidth\",\n                description: \"Determines the thickness of the progress bar\",\n                type: \"int\",\n                defaultValue: \"15\",\n              },\n              {\n                prop: \"percent\",\n                description:\n                  \"Determines how much of the progress bar should be filled\",\n                type: \"int\",\n                defaultValue: \"100\",\n              },\n              {\n                prop: \"rest of the props\",\n                description:\n                  \"The rest of the props are either passed along to other props (explained in documentation of those props) for use or are made for plans of future functionality but currently are not used.\",\n                type: \"N/A\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"DisplayTimer \"\n            component={\n              <DisplayTimer minutes={6} seconds={23} milliseconds={67} />\n            }\n            propDocs={[\n              {\n                prop: \"minutes\",\n                description:\n                  \"Current value of timer in minutes. Will display in the leftmost section\",\n                type: \"string\",\n                defaultValue: \"0\",\n              },\n              {\n                prop: \"seconds\",\n                description:\n                  \"Current value of timer in seconds. Will display in the middle section\",\n                type: \"string\",\n                defaultValue: \"0\",\n              },\n              {\n                prop: \"milliseconds\",\n                description:\n                  \"Current value of timer in seconds. Will display in the rightmost section\",\n                type: \"string\",\n                defaultValue: \"0\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"DisplayRound \"\n            component={<DisplayRound round={5} currentMode=\"Rest\" />}\n            propDocs={[\n              {\n                prop: \"round\",\n                description:\n                  \"Current value of round will display. Will also detect if current timer using component has no rounds and will not display text in such a case. (Component is an svg text element and is not displaying correctly here, please see timers for actual visual)\",\n                type: \"int\",\n                defaultValue: \"1\",\n              },\n              {\n                prop: \"currentMode\",\n                description:\n                  \"Current mode will display, either Work or Rest mode if inside of a tabata timer. If not inside timer mode text will not display.\",\n                type: \"string\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"panel \"\n            component={<Panel>Panel Content</Panel>}\n            propDocs={[\n              {\n                prop: \"N/A\",\n                description:\n                  \"A styled div that creates an elevated panel look and takes no props.\",\n                type: \"N/A\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Documentation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Panel from \"../generic/Panel\";\nimport Circle from \"../generic/Circle\";\nimport Button from \"../generic/Button\";\n\nclass Stopwatch extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      milliseconds: 0,\n    };\n  }\n  render() {\n    return (\n      <Panel>\n        <Circle percent={90} {...this.props} {...this.state} />\n        <div>\n          <Button type=\"Primary\" />\n          <Button type=\"Secondary\" />\n        </div>\n      </Panel>\n    );\n  }\n}\n\nStopwatch.propTypes = {\n  size: PropTypes.number,\n  strokeWidth: PropTypes.number,\n};\n\nexport default Stopwatch;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Panel from \"../generic/Panel\";\nimport Circle from \"../generic/Circle\";\nimport Button from \"../generic/Button\";\n\nclass Countdown extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      milliseconds: 0,\n    };\n  }\n  render() {\n    return (\n      <Panel>\n        <Circle percent={35} {...this.props} {...this.state} />\n        <div>\n          <Button type=\"Primary\" />\n          <Button type=\"Secondary\" />\n        </div>\n      </Panel>\n    );\n  }\n}\n\nCountdown.propTypes = {\n  size: PropTypes.number,\n  strokeWidth: PropTypes.number,\n};\n\nexport default Countdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Panel from \"../generic/Panel\";\nimport Circle from \"../generic/Circle\";\nimport Button from \"../generic/Button\";\n\nclass XY extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      milliseconds: 0,\n      totalRounds: 10,\n      currentRound: 1,\n      roundLength: 60,\n    };\n  }\n  render() {\n    return (\n      <Panel>\n        <Circle percent={0} {...this.props} {...this.state} />\n        <div>\n          <Button type=\"Primary\" />\n          <Button type=\"Secondary\" />\n        </div>\n      </Panel>\n    );\n  }\n}\n\nXY.propTypes = {\n  size: PropTypes.number,\n  strokeWidth: PropTypes.number,\n};\n\nexport default XY;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Panel from \"../generic/Panel\";\nimport Circle from \"../generic/Circle\";\nimport Button from \"../generic/Button\";\n\nclass Tabata extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      milliseconds: 0,\n      totalRounds: 10,\n      currentRound: 1,\n      roundLength: 60,\n      restLength: 10,\n      workLength: 50,\n      currentMode: \"Work\",\n    };\n  }\n  render() {\n    return (\n      <Panel>\n        <Circle percent={66} {...this.props} {...this.state} />\n        <div>\n          <Button type=\"Primary\" />\n          <Button type=\"Secondary\" />\n        </div>\n      </Panel>\n    );\n  }\n}\n\nTabata.propTypes = {\n  size: PropTypes.number,\n  strokeWidth: PropTypes.number,\n};\n\nexport default Tabata;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  height: auto;\n  padding-left: 20%;\n  padding-right: 20%;\n`;\n\nconst Timer = styled.div`\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.5rem;\n  flex-basis: 30%;\n  text-align: center;\n`;\n\nconst TimerTitle = styled.div``;\n\nfunction App() {\n  const timers = [\n    { title: \"Stopwatch\", C: <Stopwatch size={400} strokeWidth={15} /> },\n    { title: \"Countdown\", C: <Countdown size={400} strokeWidth={15} /> },\n    { title: \"XY\", C: <XY size={400} strokeWidth={15} /> },\n    { title: \"Tabata\", C: <Tabata size={400} strokeWidth={15} /> },\n  ];\n\n  return (\n    <Timers>\n      {timers.map((timer, index) => (\n        <Timer key={index}>\n          <TimerTitle>{timer.title}</TimerTitle>\n          {timer.C}\n        </Timer>\n      ))}\n    </Timers>\n  );\n}\n\nexport default App;\n","import styled from \"styled-components\";\n\nconst NavContainer = styled.div`\n  background-color: #186bf2;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.23);\n  margin-bottom: 3%;\n\n  ul {\n    margin-top: 0;\n    list-style: none;\n    padding: 1em;\n    display: flex;\n    justify-content: end;\n    color: white;\n  }\n\n  li {\n    margin-right: 1em;\n  }\n\n  li:first-child {\n    margin-right: auto;\n  }\n\n  a {\n    color: white;\n    text-decoration: none;\n  }\n\n  a:hover {\n    color: #2b193d;\n  }\n`;\n\nexport default NavContainer;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\nimport NavContainer from \"./components/generic/NavContainer\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Router>\n        <NavContainer>\n          <nav>\n            <ul>\n              <li>Aali2537 Assignment 1</li>\n              <li>\n                <Link to=\"/\">Timers</Link>\n              </li>\n              <li>\n                <Link to=\"/docs\">Documentation</Link>\n              </li>\n            </ul>\n          </nav>\n        </NavContainer>\n        <Switch>\n          <Route path=\"/docs\">\n            <DocumentationView />\n          </Route>\n          <Route path=\"/\">\n            <TimersView />\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}